{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to Subatomic!\n\n\nSubatomic is a toolset designed to automate the provisioning and use of your development environment from infrastructure through to CI/CD pipelines and associated monitoring. The goals of the project are to remove the hassle and cost of repeating the processes required to get new projects up and running from scratch to being to deployed into multiple environments. The project home can be found \nhere\n.\n\n\nGetting Started\n\n\nThere are many moving pieces in the Subatomic environment but a users main interaction with the system will occur through the Quantum Mechanic slack client. In future a web ui will be added for a more powerful user experience. Below are some links to help a user getting started with the system.\n\n\n\n\nUser Guide\n - A tutorial for getting started as an end user of subatomic.\n\n\nQuantum Mechanic Command Reference\n - A reference guide for using the slack commands in Quantum Mechanic.\n\n\nNew to Subatomic\n - A useful set of links and\nreference materials if you're new to Subatomic.\n\n\n\n\nThe Subatomic Stack\n\n\nSubatomic is built with a specific core stack in mind. The below list details the environment requirements for running Subatomic.\n\n\n\n\nOpenshift\n - \"Red Hat\u00ae OpenShift is a container application platform that brings docker and Kubernetes to the enterprise\". Openshift is used to provision environments for new projects and as a home for the associated CI/CD pipelines created through subatomic.\n\n\nBitbucket Server\n - Subatomic's primary market is large development teams and naturally this tends towards large organizational environments. The Atlassian stack is common place in such environments and as such Bitbucket Server is currently the only supported source control system supported in Subatomic.\n\n\nSlack\n - Slack is the primary means for interaction with the Subatomic system through the ChatOps style Quantum Mechanic interface. It is important to note that Quantum Mechanic is built using the \nAtomist\n framework.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-subatomic",
            "text": "Subatomic is a toolset designed to automate the provisioning and use of your development environment from infrastructure through to CI/CD pipelines and associated monitoring. The goals of the project are to remove the hassle and cost of repeating the processes required to get new projects up and running from scratch to being to deployed into multiple environments. The project home can be found  here .",
            "title": "Welcome to Subatomic!"
        },
        {
            "location": "/#getting-started",
            "text": "There are many moving pieces in the Subatomic environment but a users main interaction with the system will occur through the Quantum Mechanic slack client. In future a web ui will be added for a more powerful user experience. Below are some links to help a user getting started with the system.   User Guide  - A tutorial for getting started as an end user of subatomic.  Quantum Mechanic Command Reference  - A reference guide for using the slack commands in Quantum Mechanic.  New to Subatomic  - A useful set of links and\nreference materials if you're new to Subatomic.",
            "title": "Getting Started"
        },
        {
            "location": "/#the-subatomic-stack",
            "text": "Subatomic is built with a specific core stack in mind. The below list details the environment requirements for running Subatomic.   Openshift  - \"Red Hat\u00ae OpenShift is a container application platform that brings docker and Kubernetes to the enterprise\". Openshift is used to provision environments for new projects and as a home for the associated CI/CD pipelines created through subatomic.  Bitbucket Server  - Subatomic's primary market is large development teams and naturally this tends towards large organizational environments. The Atlassian stack is common place in such environments and as such Bitbucket Server is currently the only supported source control system supported in Subatomic.  Slack  - Slack is the primary means for interaction with the Subatomic system through the ChatOps style Quantum Mechanic interface. It is important to note that Quantum Mechanic is built using the  Atomist  framework.",
            "title": "The Subatomic Stack"
        },
        {
            "location": "/user-guide/overview/",
            "text": "User Guide Overview\n\n\nA new end-user can follow this example guide to get started on their organizations Subatomic instance. This guide will cover the basics of getting onboarded onto Subatomic and creating your first project and deployments. After covering the basic conversational flow as presented in this tutorial, you are encouraged to look at the detailed reference of commands available within Quantum Mechanic \nhere\n. The user of this tutorial is assumed to be a team lead setting up a new team environment within subatomic. There will be side notes for basic team members and much of the tutorial should be useful to new members to understand the general use of Subatomic.\n\n\nTutorial Contents\n\n\n\n\nUser Onboarding\n\n\nCreate a Team\n\n\nCreate a Project\n\n\nAdd an Application",
            "title": "Overview"
        },
        {
            "location": "/user-guide/overview/#user-guide-overview",
            "text": "A new end-user can follow this example guide to get started on their organizations Subatomic instance. This guide will cover the basics of getting onboarded onto Subatomic and creating your first project and deployments. After covering the basic conversational flow as presented in this tutorial, you are encouraged to look at the detailed reference of commands available within Quantum Mechanic  here . The user of this tutorial is assumed to be a team lead setting up a new team environment within subatomic. There will be side notes for basic team members and much of the tutorial should be useful to new members to understand the general use of Subatomic.",
            "title": "User Guide Overview"
        },
        {
            "location": "/user-guide/overview/#tutorial-contents",
            "text": "User Onboarding  Create a Team  Create a Project  Add an Application",
            "title": "Tutorial Contents"
        },
        {
            "location": "/user-guide/onboarding/",
            "text": "User Onboarding\n\n\nBefore doing anything on Subatomic, a user needs to be onboarded onto the system to provide context for any commands issued to Quantum Mechanic. To begin the onboarding process open a direct message slack conversation the the Atomist bot.  the following command\n\n\nsub onboard me\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nA conversation guiding you through the requirements for onboarding your user is started. Follow the prompts and enter the details requested. Below is an example of onboarding\n\n\n\n\nAt this point you are presented with an overview of the values you have entered. If you are happy with what you have entered either click the \"Submit\" button or respond with \nsubmit\n to proceed. If you wish to change a value respond with \nset [parameter] [value]\n. E.g. to change the first name of the user respond with \nset firstName My New First Name\n and then submit at the next prompt to do so. Please note that this process of submission/reassignment can be followed for all commands in subatomic.\n\n\nAfter submitting you will be presented with a prompt about joining or creating a team as seen below\n\n\n\n\nFor the purpose of this tutorial, click the \"Create a new team\" button and proceed to the \nCreate a Team\n section.\n\n\n\n\nIf you are not a team lead and are instead joining an existing team, click the \"Apply to join a team\" button and see the related \ndocumentation\n.",
            "title": "User Onboarding"
        },
        {
            "location": "/user-guide/onboarding/#user-onboarding",
            "text": "Before doing anything on Subatomic, a user needs to be onboarded onto the system to provide context for any commands issued to Quantum Mechanic. To begin the onboarding process open a direct message slack conversation the the Atomist bot.  the following command  sub onboard me   For details on the use of this command please see  here   A conversation guiding you through the requirements for onboarding your user is started. Follow the prompts and enter the details requested. Below is an example of onboarding   At this point you are presented with an overview of the values you have entered. If you are happy with what you have entered either click the \"Submit\" button or respond with  submit  to proceed. If you wish to change a value respond with  set [parameter] [value] . E.g. to change the first name of the user respond with  set firstName My New First Name  and then submit at the next prompt to do so. Please note that this process of submission/reassignment can be followed for all commands in subatomic.  After submitting you will be presented with a prompt about joining or creating a team as seen below   For the purpose of this tutorial, click the \"Create a new team\" button and proceed to the  Create a Team  section.   If you are not a team lead and are instead joining an existing team, click the \"Apply to join a team\" button and see the related  documentation .",
            "title": "User Onboarding"
        },
        {
            "location": "/user-guide/create-a-team/",
            "text": "Create a Team\n\n\nAt this point in the guide you should have been presented with a prompt to create a new team. You should have arrived at this point through the conversational prompts presented after onboarding your user. Note that team creation can also be invoked through the command\n\n\nsub create team\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nAfter invoking the team creation command follow the prompts and enter the details for the team as required. Below is an example of creating a team\n\n\n\n\nThe values entered can be modified or submitted as before. Submitting the values creates and stores a new team with nothing associated to it within the Subatomic environment. \n\n\nAssociate a Slack Channel\n\n\nYou are now prompted to associate a slack channel to this team. Follow the prompts to link the slack channel, and choose to either create a new channel or link an existing channel to the team. Below is an example of creating a new slack channel to associate to the team.\n\n\n\n\nA slack channel can also be created using the command\n\n\nsub create team channel\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nAlternatively an existing channel can also be linked using the command\n\n\nsub link team channel\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nThe slack channel is then automatically created and the Atomist bot is invited. Below shows the welcome message sent by the Atomist bot when it joins your channel\n\n\n\n\n\n\nIf linking an existing channel that is private, there will be some manual steps involved to invite the atomist bot to your private channel.\n\n\n\n\nCreate a DevOps Environment\n\n\nYou should now provision your DevOps environment by clicking on the \"Create DevOps environment\" button. This command can also be invoked using the command (note the \n@atomist\n prefix, which is required when sending commands in a channel instead of through direct messages to the atomist bot)\n\n\n@atomist sub request devops environment\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nA message is shown when provisioning starts and you are informed when the provisioning is complete. When the provisioning is complete your team will have a DevOps project created inside Openshift. This project hosts your jenkins master along and possibly a config server that will be used by your team's applications. Permissions for all members of your team are automatically configured. Below shows an example of the Openshift DevOps project overview\n\n\n\n\nThe team channel is updated with a message detailing possible next steps as seen below\n\n\n\n\nFor this guide proceed by clicking the \"Create project\" button and proceed to \nCreate a Project\n\n\n\n\nFor details on adding a config server see the \ndocumentation",
            "title": "Create a Team"
        },
        {
            "location": "/user-guide/create-a-team/#create-a-team",
            "text": "At this point in the guide you should have been presented with a prompt to create a new team. You should have arrived at this point through the conversational prompts presented after onboarding your user. Note that team creation can also be invoked through the command  sub create team   For details on the use of this command please see  here   After invoking the team creation command follow the prompts and enter the details for the team as required. Below is an example of creating a team   The values entered can be modified or submitted as before. Submitting the values creates and stores a new team with nothing associated to it within the Subatomic environment.",
            "title": "Create a Team"
        },
        {
            "location": "/user-guide/create-a-team/#associate-a-slack-channel",
            "text": "You are now prompted to associate a slack channel to this team. Follow the prompts to link the slack channel, and choose to either create a new channel or link an existing channel to the team. Below is an example of creating a new slack channel to associate to the team.   A slack channel can also be created using the command  sub create team channel   For details on the use of this command please see  here   Alternatively an existing channel can also be linked using the command  sub link team channel   For details on the use of this command please see  here   The slack channel is then automatically created and the Atomist bot is invited. Below shows the welcome message sent by the Atomist bot when it joins your channel    If linking an existing channel that is private, there will be some manual steps involved to invite the atomist bot to your private channel.",
            "title": "Associate a Slack Channel"
        },
        {
            "location": "/user-guide/create-a-team/#create-a-devops-environment",
            "text": "You should now provision your DevOps environment by clicking on the \"Create DevOps environment\" button. This command can also be invoked using the command (note the  @atomist  prefix, which is required when sending commands in a channel instead of through direct messages to the atomist bot)  @atomist sub request devops environment   For details on the use of this command please see  here   A message is shown when provisioning starts and you are informed when the provisioning is complete. When the provisioning is complete your team will have a DevOps project created inside Openshift. This project hosts your jenkins master along and possibly a config server that will be used by your team's applications. Permissions for all members of your team are automatically configured. Below shows an example of the Openshift DevOps project overview   The team channel is updated with a message detailing possible next steps as seen below   For this guide proceed by clicking the \"Create project\" button and proceed to  Create a Project   For details on adding a config server see the  documentation",
            "title": "Create a DevOps Environment"
        },
        {
            "location": "/user-guide/create-a-project/",
            "text": "Create a Project\n\n\nAt this point in the guide you should have been presented with a prompt to create a new project. You should have arrived at this point through the conversational prompts presented after creating your team and associated a slack channel to it. Note that project creation can also be invoked through the command run in your team channel as below\n\n\n@atomist sub create project\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nWhen talking to the Atomist bot in a channel, conversational prompts will occur in a thread. Follow the prompts and enter the necessary values for you project. An example of this is seen below\n\n\n\n\nRe-assign the values if necessary and submit when ready.\n\n\nLinking a Bitbucket Project\n\n\nYou should now be presented with options to link or create a Bitbucket project to associate to the Subatomic project, and an option to create the necessary OpenShift environments. \n\n\n\n\nChoose the option to link an existing Bitbucket project. This can also be invoked using the command below in the channel\n\n\n@atomist sub link bitbucket project\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\nFor details on creating a new Bitbucket project see the \ndocumentation\n\n\n\n\nFollow the prompts to link the bitbucket project. An example is shown below\n\n\n\n\nNote that the Bitbucket project key is pulled from the URL of the project. The URL shown when browsing the Test project above is as follows with the project key highlighted\n\n\n\n\nSubmit the command and you should be informed once the Bitbucket project has been configured. The configuration involves giving access to all members in your team access, and setting default merge checks and default reviewers for the project. \n\n\nCreate OpenShift Environments\n\n\nYou should now be prompted to create the associated Openshift evnironments for the project\n\n\n\n\nClick the \"Create OpenShift environments\" button. This command can also be invoked using the command below in the team channel\n\n\n@atomist sub request project environments\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nYou will be notified that your Openshift environments are being provisioned and once they are complete they should be visible in your Openshift instance.\n\n\n\n\nCurrently the DEV, SIT, and UAT environments are the default and only option. These will host all the applications within the project you have created. The environments have user permissions and quota's automatically configured for your team.\n\n\nAdd an Application\n\n\nOnce the project environments were provisioned you should have been prompted to create a new application in the project.\n\n\n\n\nChoose to link an existing application and proceed to \nAdd an Application\n.\n\n\n\n\nFor details on linking an existing library see the \ndocumentation",
            "title": "Create a Project"
        },
        {
            "location": "/user-guide/create-a-project/#create-a-project",
            "text": "At this point in the guide you should have been presented with a prompt to create a new project. You should have arrived at this point through the conversational prompts presented after creating your team and associated a slack channel to it. Note that project creation can also be invoked through the command run in your team channel as below  @atomist sub create project   For details on the use of this command please see  here   When talking to the Atomist bot in a channel, conversational prompts will occur in a thread. Follow the prompts and enter the necessary values for you project. An example of this is seen below   Re-assign the values if necessary and submit when ready.",
            "title": "Create a Project"
        },
        {
            "location": "/user-guide/create-a-project/#linking-a-bitbucket-project",
            "text": "You should now be presented with options to link or create a Bitbucket project to associate to the Subatomic project, and an option to create the necessary OpenShift environments.    Choose the option to link an existing Bitbucket project. This can also be invoked using the command below in the channel  @atomist sub link bitbucket project   For details on the use of this command please see  here  For details on creating a new Bitbucket project see the  documentation   Follow the prompts to link the bitbucket project. An example is shown below   Note that the Bitbucket project key is pulled from the URL of the project. The URL shown when browsing the Test project above is as follows with the project key highlighted   Submit the command and you should be informed once the Bitbucket project has been configured. The configuration involves giving access to all members in your team access, and setting default merge checks and default reviewers for the project.",
            "title": "Linking a Bitbucket Project"
        },
        {
            "location": "/user-guide/create-a-project/#create-openshift-environments",
            "text": "You should now be prompted to create the associated Openshift evnironments for the project   Click the \"Create OpenShift environments\" button. This command can also be invoked using the command below in the team channel  @atomist sub request project environments   For details on the use of this command please see  here   You will be notified that your Openshift environments are being provisioned and once they are complete they should be visible in your Openshift instance.   Currently the DEV, SIT, and UAT environments are the default and only option. These will host all the applications within the project you have created. The environments have user permissions and quota's automatically configured for your team.",
            "title": "Create OpenShift Environments"
        },
        {
            "location": "/user-guide/create-a-project/#add-an-application",
            "text": "Once the project environments were provisioned you should have been prompted to create a new application in the project.   Choose to link an existing application and proceed to  Add an Application .   For details on linking an existing library see the  documentation",
            "title": "Add an Application"
        },
        {
            "location": "/user-guide/add-an-application/",
            "text": "Add an Application\n\n\nAt this point in the guide you should have been presented with a prompt to link an existing application to your project. You should have arrived at this point through the conversational prompts presented after creating a project. Note that you can also link an existing application using the command below in your team channel\n\n\n@atomist sub link application\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nBelow is an example of linking the existing application to your project\n\n\n\n\nThe flow for adding an existing application is different to all the commands encounterd so far. First the prompts for an application name and description are shown. Enter these and submit them when you are satisfied with your values. Subatomic will then pull a list of all the repositories in your Bitbucket project and you can select which one is holds the source for the application you wish to use. Once you have made you selection you will be informed that your application is being provisioned.\n\n\nJenkins Build\n\n\nThe application should now be provisioned and you are presented with an option to kick off a build. Note that if your application did not have a Jenkins build file, Subatomic will generate one for you and add it to your application repository. The message should looks as below\n\n\n\n\nStart the build by choosing the presented option. The jenkins build can also be start by using the command below in your channel\n\n\n@atomist sub jenkins build\n\n\n\n\nFor details on the use of this command please see \nhere\n\n\n\n\nYou should be notified that your application is now being built. The build is started using your Jenkins master instance in your DevOps environment. The link to your jenkins instance can be found in the DevOps environment and logging into the instance will then allow you to track/promote and deploy your builds.",
            "title": "Add an Application"
        },
        {
            "location": "/user-guide/add-an-application/#add-an-application",
            "text": "At this point in the guide you should have been presented with a prompt to link an existing application to your project. You should have arrived at this point through the conversational prompts presented after creating a project. Note that you can also link an existing application using the command below in your team channel  @atomist sub link application   For details on the use of this command please see  here   Below is an example of linking the existing application to your project   The flow for adding an existing application is different to all the commands encounterd so far. First the prompts for an application name and description are shown. Enter these and submit them when you are satisfied with your values. Subatomic will then pull a list of all the repositories in your Bitbucket project and you can select which one is holds the source for the application you wish to use. Once you have made you selection you will be informed that your application is being provisioned.",
            "title": "Add an Application"
        },
        {
            "location": "/user-guide/add-an-application/#jenkins-build",
            "text": "The application should now be provisioned and you are presented with an option to kick off a build. Note that if your application did not have a Jenkins build file, Subatomic will generate one for you and add it to your application repository. The message should looks as below   Start the build by choosing the presented option. The jenkins build can also be start by using the command below in your channel  @atomist sub jenkins build   For details on the use of this command please see  here   You should be notified that your application is now being built. The build is started using your Jenkins master instance in your DevOps environment. The link to your jenkins instance can be found in the DevOps environment and logging into the instance will then allow you to track/promote and deploy your builds.",
            "title": "Jenkins Build"
        },
        {
            "location": "/quantum-mechanic/command-reference/",
            "text": "",
            "title": "Command Reference"
        },
        {
            "location": "/new-to-subatomic/",
            "text": "// TODO",
            "title": "New to Subatomic"
        }
    ]
}